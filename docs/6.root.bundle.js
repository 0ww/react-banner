(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{97:function(e,n,s){"use strict";s.r(n),n.default='<p>Top navigation bars are great when your site is being viewed on larger screens\nlike desktops and laptops, however when users visit your site from a mobile\nphone you need to offer a more friendly alternative. There\'s a lot of options\nout there: <a href="https://dribbble.com/shots/2225840-Simplified-Mobile-Navigation">top-down menus</a>, <a href="https://dribbble.com/shots/2193651-Mobile-menu">full-screen overlay menus</a>, <a href="https://dribbble.com/shots/2695255-Profile-and-side-panel-menu">panels</a>\nand many more. Personally I think side panels are the most intuitive and, with\n<a href="https://github.com/balloob/react-sidebar">React Sidebar</a>, very easy to configure. </p>\n<blockquote>\n<p>Tip: View this page on a mobile screen (or with mobile dev tools) to see\nthis in action. Clicking the hamburger menu in the top right corner will\ndisplay the sidebar.</p>\n</blockquote>\n<h2>Basic Setup</h2>\n<p>Luckily, this package provides a built-in hamburger menu displayed on smaller\nscreens that you can hook into to display the menu. Going forward with our\noriginal example, you would <code>npm install react-sidebar --save</code> and update the\ncode as such:</p>\n<pre><code class="hljs language-js"><span class="hljs-keyword">import</span> React <span class="hljs-keyword">from</span> <span class="hljs-string">\'react\'</span>\n<span class="hljs-keyword">import</span> Banner <span class="hljs-keyword">from</span> <span class="hljs-string">\'react-banner\'</span>\n<span class="hljs-keyword">import</span> Sidebar <span class="hljs-keyword">from</span> <span class="hljs-string">\'react-sidebar\'</span>\n<span class="hljs-keyword">import</span> <span class="hljs-string">\'react-banner/dist/style.css\'</span>\n\n<span class="hljs-keyword">const</span> SidebarContent = <span class="hljs-function"><span class="hljs-params">props</span> =></span> {\n    <span class="hljs-keyword">return</span> (\n        &#x3C;div style={{\n            width: \'80vw\',\n            height: \'100vh\',\n            background: \'white\'\n        }} />\n    )\n}\n\nconst Site = props => {\n    const [sidebar, setSidebar] = useState(false)\n    \n    return (\n        &#x3C;Sidebar\n            sidebar={ &#x3C;}\n            open={ sidebar }\n            onSetOpen={ () => setSidebar(true) }>\n            &#x3C;Banner\n                logo="My Logo"\n                url={ window.location.pathname }\n                onMenuClick={ () => setSidebar(!sidebar) }\n                items={[\n                    { "content": "Example Link", "url": "/example" },\n                    { "content": "Another", "url": "/another" }\n                ]} />\n            &#x3C;main>\n                &#x3C;h2>Hey, I\'m some content&#x3C;/h2>\n            &#x3C;/main>\n        &#x3C;/Sidebar>\n    )\n}</code></pre>\n<blockquote>\n<p>Note: The above example just shows an empty <code>&#x3C;div></code> for brevity, however in\na real site you\'d likely use the same link array passed to the <code>Banner</code> to\ngenerate a vertical navigation menu displayed within <code>SidebarContent</code>.</p>\n</blockquote>\n<p>Using <a href="https://github.com/balloob/react-sidebar">React Sidebar</a> is just one of many possibilities. Using the\n<code>onMenuClick</code> property you could pass a callback that triggers any kind of\nmenu or behavior to occur.</p>\n'}}]);
//# sourceMappingURL=6.root.bundle.js.map